
fn min0(a: Int, b: Int) -> Int {
    return when b < a then b else a
}

fn min1(a: Int, b: Int) -> Int {
    if a <= b {
        return a;
    };
    return b;
} ensure result == min0(a, b)

fn min2(a: Int, b: Int) -> Int {
    if a < b {
        return a;
    } else {
        return b;
    }
} ensure result == min0(a, b)

fn min3(a: Int, b: Int) -> Int {
    var r0 = a;
    if b < a {
        r0 = b
    };
    return r0
} ensure result == min0(a, b)

fn min4(a: Int, b: Int) -> Int {
    var r = 0;
    if a < b {
        r = a;
    } else {
        r = b
    };
    return r
} ensure result == min0(a, b)
